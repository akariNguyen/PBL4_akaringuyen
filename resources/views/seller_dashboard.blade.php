<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <title>K√™nh Ng∆∞·ªùi B√°n - E‚ÄëMarket</title>
    <style>
        :root { --primary:#111827; --muted:#6b7280; --border:#e5e7eb; --bg:#f8fafc; --brand:#ef4444; }
        * { box-sizing:border-box; }
        body { margin:0; font-family: Inter, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif; background:#fff; color:#111827; }
        .topbar { height:56px; border-bottom:1px solid var(--border); display:flex; align-items:center; justify-content:flex-start; padding:0 16px; position:sticky; top:0; background:#fff; z-index:50; }
        .left { display:flex; align-items:center; gap:12px; }
        .brand { display:flex; align-items:center; gap:10px; font-weight:700; white-space:nowrap; }
        .brand img { height:80px; width:auto; }
        .brand span.e-market { font-size: 28px; color: #2563eb; }
        .brand span.channel { font-size: 28px; color: #ef4444; }
        .layout { display:grid; grid-template-columns: 240px 1fr; min-height: calc(100vh - 56px); }
        .sidebar { border-right:1px solid var(--border); padding:16px; background:#fff; }
        .side-title { font-weight:700; margin-bottom:8px; }
        .menu { list-style:none; padding:0; margin:0; }
        .menu li { margin:8px 0; }
        .menu a { text-decoration:none; color:#111827; padding:8px 10px; display:block; border-radius:8px; }
        .menu a:hover { background:#f3f4f6; }
        .content { background:#fafafa; padding:16px; }
        .card { background:#fff; border:1px solid var(--border); border-radius:12px; padding:16px; }
        .grid { display:grid; grid-template-columns: repeat(4, 1fr); gap:16px; }
        .metric { text-align:center; padding:16px; border:1px solid var(--border); border-radius:12px; background:#fff; }
        .metric h3 { margin:0 0 6px 0; font-size:14px; color:var(--muted); font-weight:600; }
        .metric .val { font-size:28px; font-weight:700; }
        .tabs { display:flex; gap:0; border-bottom:1px solid #e5e7eb; margin-bottom:12px; }
        .tab { padding:10px 14px; cursor:pointer; border:0; background:none; color:#6b7280; font-weight:600; }
        .tab.active { color:#111827; position:relative; }
        .tab.active::after { content:""; position:absolute; left:10px; right:10px; bottom:-1px; height:2px; background:#2563eb; }
        .section { padding-top:8px; }
        .row { display:flex; align-items:center; gap:12px; margin-bottom:10px; }
        .label { color:#6b7280; min-width:140px; }
        input[type="text"], input[type="password"], textarea, select { padding:10px 12px; border:1px solid #d1d5db; border-radius:8px; }
        .edit-input { max-width: 250px; }
        .btn { padding:8px 12px; border-radius:8px; border:1px solid #e5e7eb; background:#fff; cursor:pointer; font-size:14px; }
        .btn.primary { background:#2563eb; color:#fff; border-color:#2563eb; }
        .btn.green { background:#16a34a; color:#fff; border-color:#16a34a; }
        .btn.green:hover { background:#15803d; border-color:#15803d; }
        .btn.orange { background:#f59e0b; color:#fff; border-color:#f59e0b; }
        .btn.orange:hover { background:#d97706; border-color:#d97706; }
        .btn.red { background:#dc2626; color:#fff; border-color:#dc2626; }
        .btn.red:hover { background:#b91c1c; border-color:#b91c1c; }
        .btn:disabled { background:#d1d5db; color:#6b7280; cursor:not-allowed; }
        .icon-btn { border:none; background:none; cursor:pointer; color:#2e7d32; padding:10px; font-size:18px; border-radius:8px; }
        .icon-btn:hover { background:#f3f4f6; color:#1b5e20; }
        .muted { color:#6b7280; }
        .avatar { height:48px; width:48px; border-radius:999px; object-fit:cover; }
        .logo { height:56px; width:56px; object-fit:cover; border-radius:8px; border:1px solid #e5e7eb; }
        .actions { display:flex; gap:8px; }
        .hint { color:#6b7280; font-size:13px; }
        .inline { flex:1; }
        .view-text { display:inline; }
        .edit-input { display:none; }
        .editing .view-text { display:none; }
        .editing .edit-input { display:inline-block; }
        .save-bar { display:none; justify-content:flex-start; gap:8px; margin-top:8px; }
        .editing .save-bar { display:flex; }
        .success-message { background:#ecfdf5; color:#047857; padding:10px 12px; border:1px solid #a7f3d0; border-radius:8px; margin-bottom:12px; }
        .suspended-alert { background:#fee2e2; color:#dc2626; padding:16px; border:1px solid #fecaca; border-radius:8px; margin-bottom:16px; }
        table { width:100%; border-collapse:separate; border-spacing:0 8px; }
        th, td { padding:12px; text-align:left; }
        th { background:#f3f4f6; font-weight:600; }
        tr { background:#fff; border:1px solid #e5e7eb; border-radius:8px; }
        @media (max-width: 1024px) { .grid { grid-template-columns: repeat(2, 1fr); } .layout { grid-template-columns: 200px 1fr; } }
        @media (max-width: 640px) { .grid { grid-template-columns: 1fr; } .layout { grid-template-columns: 1fr; } .sidebar { display:none; } }
    </style>
</head>
<body>
@php
    $shop = \App\Models\Shop::where('user_id', auth()->id())->first();
@endphp
@php
    $year = request()->get('year', now()->year);
    $sellerId = auth()->id();

    $sellerOrders = \App\Models\Order::whereHas('items', function($q) use ($sellerId) {
        $q->where('seller_id', $sellerId);
    })->whereYear('created_at', $year)
      ->where('status', 'completed')
      ->with(['items' => function($q) use ($sellerId) { $q->where('seller_id', $sellerId); }])
      ->get();

    $totalOrders  = $sellerOrders->count();
    $soldCount    = $sellerOrders->flatMap(fn($o) => $o->items ?? collect())->sum('quantity');
    $totalRevenue = $sellerOrders->sum('total_price');

    // Doanh thu theo th√°ng
    // ‚úÖ Gi·ªõi h·∫°n ƒë·∫øn th√°ng hi·ªán t·∫°i (ch·ªâ th·ªëng k√™ th√°ng 1 -> th√°ng hi·ªán t·∫°i)
        // Doanh thu theo th√°ng
    // ‚úÖ Gi·ªõi h·∫°n ƒë·∫øn th√°ng hi·ªán t·∫°i (ch·ªâ th·ªëng k√™ th√°ng 1 -> th√°ng hi·ªán t·∫°i)
    $currentMonth = ($year == now()->year) ? now()->month : 12;
    $revenues = [];
    for ($m = 1; $m <= $currentMonth; $m++) {
        $revenues[$m] = \App\Models\Order::whereHas('items', function($q) use ($sellerId) {
            $q->where('seller_id', $sellerId);
        })->whereYear('created_at', $year)
        ->whereMonth('created_at', $m)
        ->where('status', 'completed')
        ->sum('total_price');
    }
    // ‚úÖ M·∫£ng bi·ªÉu ƒë·ªì ch·ªâ ch·ª©a th√°ng 1 -> th√°ng hi·ªán t·∫°i (d√πng $currentMonth thay v√¨ 12)
    $revenuesChart = array_values($revenues ?: array_fill(0, $currentMonth, 0));
@endphp

    <div class="topbar">
        <div class="left">
            <div class="brand">
                <img src="/Picture/logo.png" alt="E‚ÄëMarket">
                <span class="e-market">E‚ÄëMarket</span><span class="channel">K√™nh b√°n h√†ng</span>
            </div>
        </div>
    </div>
    <div class="layout">
        <aside class="sidebar">
            <div class="side-section">
                <div class="side-title">Qu·∫£n L√Ω ƒê∆°n H√†ng</div>
                <ul class="menu">
                    <li><a href="#" data-view="orders_all">T·∫•t c·∫£</a></li>
                    
                    <li><a href="#" data-view="handover">B√†n Giao ƒê∆°n H√†ng</a></li>
                    <li><a href="#" data-view="returns">Tr·∫£ h√†ng/Ho√†n ti·ªÅn/H·ªßy</a></li>
                    
                </ul>
            </div>
            <div class="side-section" style="margin-top:16px;">
                <div class="side-title">Qu·∫£n L√Ω S·∫£n Ph·∫©m</div>
                <ul class="menu">
                    <li><a href="#" data-view="products_all">T·∫•t C·∫£ S·∫£n Ph·∫©m</a></li>
                    <li><a href="#" data-view="product_add">Th√™m S·∫£n Ph·∫©m</a></li>
                </ul>
            </div>
            <div class="side-section" style="margin-top:16px;">
                <div class="side-title">Qu·∫£n L√Ω Voucher</div>
                <ul class="menu">
                    <li><a href="#" data-view="vouchers">T·∫•t c·∫£ voucher</a></li>
                    <li><a href="#" data-view="voucher_add">Th√™m voucher</a></li>
                </ul>
            </div>
            <div class="side-section" style="margin-top:16px;">
                <div class="side-title" style="font-weight:700;">Th·ªëng K√™</div>
                <ul class="menu">
                    <li>
                        <a href="#" data-view="revenue_report" style=" color:#111827;">
                            üí∞ Th·ªëng k√™ doanh thu
                        </a>
                    </li>
                </ul>
            </div>

            <div class="side-section" style="margin-top:16px;">
                <div class="side-title">T√†i Kho·∫£n</div>
                <ul class="menu">
                    <li><a href="#" data-view="account_personal">Th√¥ng tin t√†i kho·∫£n</a></li>
                    <li>
                        <a href="#" onclick="event.preventDefault(); document.getElementById('logout-form').submit();">
                            ƒêƒÉng xu·∫•t
                        </a>
                        <form id="logout-form" method="POST" action="{{ route('logout') }}" style="display:none;">
                            @csrf
                        </form>
                    </li>
                </ul>
            </div>
        </aside>
        <main class="content" id="mainContent">
            @if($shop && $shop->status === 'suspended')
            <div class="suspended-alert">
                <h3 style="margin:0 0 8px 0; font-weight:600;">Shop ƒë√£ b·ªã ƒë√¨nh ch·ªâ</h3>
                <p style="margin:0; font-size:14px;">Shop c·ªßa b·∫°n ƒë√£ b·ªã ƒë√¨nh ch·ªâ ho·∫°t ƒë·ªông. Vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ ƒë·ªÉ ƒë∆∞·ª£c gi·∫£i quy·∫øt. C√°c ch·ª©c nƒÉng qu·∫£n l√Ω c√≥ th·ªÉ b·ªã h·∫°n ch·∫ø.</p>
            </div>
            @endif
            <div class="card" style="margin-bottom:16px;">
                <h2 style="margin:0 0 8px 0;">Danh s√°ch c·∫ßn l√†m</h2>
                <div class="grid">
                    <div class="metric"><h3>Ch·ªù L·∫•y H√†ng</h3><div class="val">0</div></div>
                    <div class="metric"><h3>ƒê√£ X·ª≠ L√Ω</h3><div class="val">0</div></div>
                    <div class="metric"><h3>Tr·∫£ h√†ng/Ho√†n ti·ªÅn/H·ªßy</h3><div class="val">0</div></div>
                    <div class="metric"><h3>S·∫£n Ph·∫©m B·ªã T·∫°m Kh√≥a</h3><div class="val">0</div></div>
                </div>
            </div>
            <div class="card">
                <h2 style="margin:0 0 8px 0;">Ph√¢n T√≠ch B√°n H√†ng</h2>
                <div class="grid">
                    <div class="metric"><h3>Doanh s·ªë</h3><div class="val">0</div></div>
                    <div class="metric"><h3>L∆∞·ª£t truy c·∫≠p</h3><div class="val">0</div></div>
                    <div class="metric"><h3>Product Clicks</h3><div class="val">0</div></div>
                    <div class="metric"><h3>ƒê∆°n h√†ng</h3><div class="val">0</div></div>
                </div>
            </div>
        </main>
    </div>
    <!-- Hidden templates for center content -->
    <template id="tpl-orders-all">
        <?php
            use App\Models\Order;
            use App\Models\OrderItem;
            $sellerId = auth()->id();
            $orders = Order::whereHas('items', function($q) use ($sellerId) {
                $q->where('seller_id', $sellerId);
            })->with(['items' => function($q) use ($sellerId) {
                $q->where('seller_id', $sellerId);
            }, 'user'])->latest()->get();
            $completedCount = $orders->where('status', 'completed')->count();
            $undeliveredCount = $orders->whereIn('status', ['pending', 'shipped'])->count();
            $cancelledCount = $orders->where('status', 'cancelled')->count();
        ?>
        
        <div class="card" style="margin-bottom:16px;">
            <h2 style="margin:0 0 8px 0;">Th·ªëng k√™ ƒë∆°n h√†ng</h2>
            <div class="grid" style="grid-template-columns: repeat(3, 1fr);">
                <div class="metric">
                    <h3>ƒê√£ giao</h3>
                    <div class="val">{{ $completedCount }}</div>
                </div>
                <div class="metric">
                    <h3>Ch∆∞a giao</h3>
                    <div class="val">{{ $undeliveredCount }}</div>
                </div>
                <div class="metric">
                    <h3>H·ªßy</h3>
                    <div class="val">{{ $cancelledCount }}</div>
                </div>
            </div>
        </div>
        <div class="card">
            <div style="display:flex; align-items:center; justify-content:space-between; margin-bottom:12px;">
                <h2 style="margin:0;">Qu·∫£n l√Ω t·∫•t c·∫£ ƒë∆°n h√†ng</h2>
                <div style="display:flex; gap:12px;">
                    <input id="filterFrom" type="date" style="padding:10px 12px; border:1px solid #d1d5db; border-radius:8px;">
                    <input id="filterTo" type="date" style="padding:10px 12px; border:1px solid #d1d5db; border-radius:8px;">
                    <button id="btnFilter" class="btn primary">L·ªçc</button>
                </div>
            </div>
            <div class="tabs">
                <button class="tab active" data-tab="pending">Ch·ªù x·ª≠ l√Ω</button>
                <button class="tab" data-tab="shipped">ƒêang giao</button>
                <button class="tab" data-tab="completed">Ho√†n th√†nh</button>
                <button class="tab" data-tab="cancelled">ƒê√£ h·ªßy</button>
            </div>
            <div id="ordersList">
                <!-- Danh s√°ch ƒë∆°n h√†ng s·∫Ω ƒë∆∞·ª£c render ƒë·ªông b·∫±ng JS -->
            </div>
        </div>
        <!-- D·ªØ li·ªáu orders JSON ƒë·ªÉ JS x·ª≠ l√Ω -->
        <script>
            const allOrders = @json($orders);
        </script>
    </template>
        <template id="tpl-products-all">
        <?php
            $sellerProducts = \App\Models\Product::where('seller_id', auth()->id())
                ->with('category')
                ->latest()
                ->get();
        ?>
        @if($shop && $shop->status === 'suspended')
        <div class="suspended-alert">
            <h3 style="margin:0 0 8px 0; font-weight:600;">Shop ƒë√£ b·ªã ƒë√¨nh ch·ªâ</h3>
            <p style="margin:0; font-size:14px;">Shop c·ªßa b·∫°n ƒë√£ b·ªã ƒë√¨nh ch·ªâ ho·∫°t ƒë·ªông. Vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ ƒë·ªÉ ƒë∆∞·ª£c gi·∫£i quy·∫øt. C√°c ch·ª©c nƒÉng qu·∫£n l√Ω c√≥ th·ªÉ b·ªã h·∫°n ch·∫ø.</p>
        </div>
        @endif
        <div class="card" style="margin-bottom:16px;">
           <div style="display:flex; align-items:center; justify-content:space-between; gap:12px;">
    <h2 style="margin:0;">Qu·∫£n l√Ω t·∫•t c·∫£ s·∫£n ph·∫©m</h2>
    <div style="display:flex; align-items:center; gap:8px;">
        <!-- üîç T√¨m ki·∫øm -->
        <input id="productsSearch" type="text" placeholder="T√¨m ki·∫øm theo t√™n..."
            style="padding:10px 12px; border:1px solid #e5e7eb; border-radius:8px; width:220px;">

        <!-- üè∑Ô∏è L·ªçc tr·∫°ng th√°i -->
        <select id="statusFilter" style="padding:10px 12px; border:1px solid #e5e7eb; border-radius:8px;">
            <option value="">T·∫•t c·∫£ tr·∫°ng th√°i</option>
            <option value="pending">Ch·ªù duy·ªát</option>
            <option value="in_stock">C√≤n h√†ng</option>
            <option value="rejected">B·ªã t·ª´ ch·ªëi</option>
        </select>

        <!-- ‚ûï N√∫t th√™m s·∫£n ph·∫©m -->
        <a href="#" onclick="event.preventDefault(); navigate('product_add')"
            style="text-decoration:none; padding:10px 14px; border-radius:8px; background:#2563eb; border:1px solid #2563eb; color:#fff; display:flex; align-items:center;">
            + Th√™m s·∫£n ph·∫©m
        </a>
    </div>
</div>

        </div>
        <style>
            #productsGrid { display:grid; grid-template-columns: repeat(2, 1fr); gap:16px; }
            .view-text { display:inline; }
            .edit-input { display:none; }
            .save-bar { display:none; }
            .product-card.editing .view-text { display:none; }
            .product-card.editing .edit-input { display:inline-block; }
            .product-card.editing .save-bar { display:flex; gap:8px; margin-top:8px; }
        </style>
        <div class="grid" id="productsGrid">
            @foreach($sellerProducts as $p)
    <?php
        $imgs = is_array($p->images) ? $p->images : [];
        $img = count($imgs) ? Storage::disk('public')->url($imgs[0]) : '/Picture/products/Aothun.jpg';
        $statusColor = match($p->status){
            'in_stock' => '#16a34a',
            'out_of_stock' => '#dc2626',
            'discontinued' => '#6b7280',
            'pending' => '#f59e0b',
            'rejected' => '#ef4444',
            default => '#6b7280',
        };
        $statusText = match($p->status){
            'in_stock' => 'C√≤n h√†ng',
            'out_of_stock' => 'H·∫øt h√†ng',
            'discontinued' => 'Ng·ª´ng kinh doanh',
            'pending' => 'Ch·ªù duy·ªát',
            'rejected' => 'B·ªã t·ª´ ch·ªëi',
            default => 'Kh√¥ng x√°c ƒë·ªãnh',
        };
    ?>
    <form method="post" 
      action="{{ route('products.update', $p->id) }}" 
      class="card product-card product-form" 
      data-status="{{ $p->status }}" 
      style="width:100%;">

        @csrf
        @method('PUT')
        <div style="display:flex; align-items:flex-start; gap:20px; padding:20px;">
            <img src="{{ $img }}" alt="{{ $p->name }}"
                style="width:150px; height:150px; object-fit:cover; border-radius:8px; border:1px solid #e5e7eb;">
            
            <div style="flex:1;">
                <!-- üßæ T√™n + Tr·∫°ng th√°i -->
                <div style="display:flex; justify-content:space-between; align-items:flex-start; margin-bottom:12px;">
                    <h3 style="margin:0; font-size:20px; font-weight:600;">
                        <span class="view-text">{{ $p->name }}</span>
                        <input class="edit-input" type="text" name="name" value="{{ $p->name }}">
                    </h3>
                    <span style="font-size:14px; padding:6px 12px; border-radius:999px; background:{{ $statusColor }}20; color:{{ $statusColor }}; border:1px solid {{ $statusColor }}33;">
                        {{ $statusText }}
                    </span>
                </div>

                <!-- üè∑Ô∏è Tr·∫°ng th√°i s·∫£n ph·∫©m -->
                <div style="margin-bottom:16px;">
                    <label style="font-weight:600; color:#6b7280;">Tr·∫°ng th√°i:</label>
                    <span class="view-text" style="margin-left:6px; color:#111827; font-weight:600;">{{ $statusText }}</span>
                    <select class="edit-input" name="status" style="padding:8px 10px; border:1px solid #d1d5db; border-radius:8px;">
                        <option value="pending" {{ $p->status=='pending'?'selected':'' }}>Ch·ªù duy·ªát</option>
                        <option value="in_stock" {{ $p->status=='in_stock'?'selected':'' }}>C√≤n h√†ng</option>
                        <option value="rejected" {{ $p->status=='rejected'?'selected':'' }}>B·ªã t·ª´ ch·ªëi</option>
                    </select>
                </div>

                <!-- üì¶ ƒê√£ b√°n + T·ªìn kho -->
                <div style="display:flex; gap:16px; margin-bottom:16px;">
                    <div style="flex:1; border:1px solid #e5e7eb; border-radius:10px; padding:12px; text-align:center;">
                        <div style="font-weight:700; font-size:18px;">{{ $p->sold_quantity }}</div>
                        <div style="font-size:14px; color:#6b7280;">ƒê√£ b√°n</div>
                    </div>
                    <div style="flex:1; border:1px solid #e5e7eb; border-radius:10px; padding:12px; text-align:center;">
                        <div class="view-text" style="font-weight:700; font-size:18px;">{{ $p->quantity }}</div>
                        <input class="edit-input" type="number" name="quantity" value="{{ $p->quantity }}">
                        <div style="font-size:14px; color:#6b7280;">T·ªìn kho</div>
                    </div>
                </div>

                <!-- üí∞ Gi√° -->
                <div style="margin-bottom:16px; font-weight:800; color:#16a34a;">
                    <span class="view-text">{{ number_format($p->price, 0, ',', '.') }} VND</span>
                    <input class="edit-input" type="number" name="price" value="{{ $p->price }}">
                </div>

                <!-- üè∑Ô∏è Lo·∫°i -->
                <div style="margin-bottom:16px; font-size:14px; color:#6b7280;">
                    Lo·∫°i s·∫£n ph·∫©m:
                    <span class="view-text" style="color:#111827; font-weight:600;">{{ $p->category?->name ?? '‚Äî' }}</span>
                    <input class="edit-input" type="text" name="category" value="{{ $p->category?->name ?? '' }}">
                </div>

                <!-- üß≠ Buttons -->
                <div style="display:flex; justify-content:flex-end; gap:12px;">
                    <!-- ‚ùå ƒê√É X√ìA N√öT X√ìA -->
                    <button type="button" class="btn green btn-edit">Ch·ªânh s·ª≠a</button>
                    <div class="save-bar">
                        <button type="submit" class="btn primary">L∆∞u</button>
                        <button type="button" class="btn btn-cancel">H·ªßy</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
@endforeach

        </div>
    </template>
    <template id="tpl-product-add">
        @if($shop && $shop->status === 'suspended')
        <div class="suspended-alert">
            <h3 style="margin:0 0 8px 0; font-weight:600;">Shop ƒë√£ b·ªã ƒë√¨nh ch·ªâ</h3>
            <p style="margin:0; font-size:14px;">Shop c·ªßa b·∫°n ƒë√£ b·ªã ƒë√¨nh ch·ªâ ho·∫°t ƒë·ªông. Vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ ƒë·ªÉ ƒë∆∞·ª£c gi·∫£i quy·∫øt. C√°c ch·ª©c nƒÉng qu·∫£n l√Ω c√≥ th·ªÉ b·ªã h·∫°n ch·∫ø.</p>
        </div>
        @endif
        <div class="card">
            <h2 style="margin:0 0 12px 0;">Th√™m s·∫£n ph·∫©m</h2>
            <p style="margin:0 0 16px 0; color:#6b7280;">N·∫øu lo·∫°i s·∫£n ph·∫©m ch∆∞a c√≥, ch·ªçn "Kh√°c" v√† nh·∫≠p lo·∫°i m·ªõi.</p>
            <form method="post" action="{{ route('products.store') }}" enctype="multipart/form-data" class="product-form">
                @csrf
                <div style="margin-bottom:12px;">
                    <label style="display:block; font-weight:600; margin-bottom:6px;">T√™n s·∫£n ph·∫©m</label>
                    <input type="text" name="name" style="width:100%; padding:10px 12px; border:1px solid #d1d5db; border-radius:8px;" required>
                </div>
                <div style="display:grid; grid-template-columns:1fr 1fr; gap:12px; margin-bottom:12px;">
                    <div>
                        <label style="display:block; font-weight:600; margin-bottom:6px;">Lo·∫°i s·∫£n ph·∫©m</label>
                        <select id="category_select" style="width:100%; padding:10px 12px; border:1px solid #d1d5db; border-radius:8px;">
                            <option value="√Åo qu·∫ßn">√Åo qu·∫ßn</option>
                            <option value=" Trang s·ª©c"> Trang s·ª©c</option>
                            <option value="Gi√†y d√©p">Gi√†y d√©p</option>
                            <option value="__other__">Kh√°c</option>
                        </select>
                    </div>
                    <div id="category_other_wrap" style="display:none;">
                        <label style="display:block; font-weight:600; margin-bottom:6px;">Lo·∫°i kh√°c</label>
                        <input type="text" id="category_other" placeholder="Nh·∫≠p lo·∫°i s·∫£n ph·∫©m" style="width:100%; padding:10px 12px; border:1px solid #d1d5db; border-radius:8px;">
                    </div>
                </div>
                <input type="hidden" name="category" id="category_value">
                <div style="margin-bottom:12px;">
                    <label style="display:block; font-weight:600; margin-bottom:6px;">M√¥ t·∫£ chi ti·∫øt</label>
                    <textarea name="description" rows="4" style="width:100%; padding:10px 12px; border:1px solid #d1d5db; border-radius:8px;"></textarea>
                </div>
                <div style="display:grid; grid-template-columns:1fr 1fr; gap:12px; margin-bottom:12px;">
                    <div>
                        <label style="display:block; font-weight:600; margin-bottom:6px;">Gi√° b√°n (VNƒê)</label>
                        <input type="number" step="0.01" name="price" style="width:100%; padding:10px 12px; border:1px solid #d1d5db; border-radius:8px;" required>
                    </div>
                    <div>
                        <label style="display:block; font-weight:600; margin-bottom:6px;">S·ªë l∆∞·ª£ng</label>
                        <input type="number" name="quantity" style="width:100%; padding:10px 12px; border:1px solid #d1d5db; border-radius:8px;" required>
                    </div>
                </div>
                <div style="margin-bottom:12px;">
                    <label style="display:block; font-weight:600; margin-bottom:6px;">H√¨nh ·∫£nh (c√≥ th·ªÉ ch·ªçn nhi·ªÅu)</label>
                    <input type="file" name="images[]" accept="image/*" multiple>
                </div>
                <div>
                    <button type="submit" style="padding:10px 16px; border-radius:8px; border:1px solid #2563eb; background:#2563eb; color:#fff;">T·∫°o s·∫£n ph·∫©m</button>
                </div>
            </form>
        </div>
    </template>
    <template id="tpl-account-personal">
        
        <div class="card">
            @if(session('success'))
                <div class="success-message">{{ session('success') }}</div>
            @endif
            @if(session('success_password'))
                <div class="success-message">{{ session('success_password') }}</div>
            @endif
            <div class="tabs">
                <button class="tab active" data-tab="info">Th√¥ng tin</button>
                <button class="tab" data-tab="password">ƒê·ªïi m·∫≠t kh·∫©u</button>
            </div>
            <div id="tab-info" class="section">
                <form id="formInfo" method="post" action="{{ route('account.personal.update') }}" enctype="multipart/form-data">
                    @csrf
                    <div class="row" style="justify-content:space-between; margin-bottom:16px;">
                        <h3 style="margin:0;">Th√¥ng tin c√° nh√¢n</h3>
                        <button type="button" id="btnEdit" class="icon-btn" title="Ch·ªânh s·ª≠a">‚úé</button>
                    </div>
                    <div class="row">
                        <div class="label">Avatar</div>
                        <div>
                            <img id="avatar_img" src="{{ auth()->user()->avatar_path ? Storage::disk('public')->url(auth()->user()->avatar_path) : '/Picture/avatar.jpg' }}" class="avatar" alt="avatar">
                            <input id="avatar_input" type="file" name="avatar" accept="image/*" class="edit-input" style="margin-left:12px;">
                        </div>
                    </div>
                    <div class="row">
                        <div class="label">H·ªç t√™n</div>
                        <div>
                            <span id="name_text" class="view-text">{{ auth()->user()->name }}</span>
                            <input class="edit-input" type="text" name="name" value="{{ auth()->user()->name }}">
                        </div>
                    </div>
                    <div class="row">
                        <div class="label">S·ªë ƒëi·ªán tho·∫°i</div>
                        <div>
                            <span class="view-text">{{ auth()->user()->phone ?? '‚Äî' }}</span>
                            <input class="edit-input" type="text" name="phone" value="{{ auth()->user()->phone ?? '' }}">
                        </div>
                    </div>
                    <div class="row">
                        <div class="label">Email</div>
                        <div class="inline">{{ auth()->user()->email }}</div>
                    </div>
                    <div class="row">
                        <div class="label">Gi·ªõi t√≠nh</div>
                        <div class="inline">{{ auth()->user()->gender === 'female' ? 'N·ªØ' : 'Nam' }}</div>
                    </div>
                    <div class="row">
                        <div class="label">Vai tr√≤</div>
                        <div class="inline">{{ auth()->user()->role }}</div>
                    </div>
                    <div class="row">
                        <div class="label">Tr·∫°ng th√°i</div>
                        <div class="inline">{{ auth()->user()->status }}</div>
                    </div>
                    @if ($errors->any())
                        <div style="background:#fee2e2; color:#dc2626; padding:10px 12px; border:1px solid #fecaca; border-radius:8px; margin-top:8px;">
                            <ul style="margin:0; padding-left:16px;">
                                @foreach ($errors->all() as $error)
                                    <li>{{ $error }}</li>
                                @endforeach
                            </ul>
                        </div>
                    @endif
                    <div class="save-bar">
                        <button type="submit" class="btn primary">L∆∞u</button>
                        <button type="button" id="btnCancel" class="btn">H·ªßy</button>
                    </div>
                </form>
                <p class="hint" style="margin-top:8px;">B·∫•m bi·ªÉu t∆∞·ª£ng ‚úé ƒë·ªÉ ch·ªânh s·ª≠a tr·ª±c ti·∫øp h·ªç t√™n, s·ªë ƒëi·ªán tho·∫°i v√† avatar. Ch·ªçn ·∫£nh ƒë·ªÉ xem tr∆∞·ªõc, ch·ªâ l∆∞u khi b·∫•m L∆∞u.</p>
            </div>
            <div id="tab-password" class="section" style="display:none;">
                <form id="formPassword" method="post" action="{{ route('account.password.update') }}">
                    @csrf
                    <div class="row">
                        <div class="label">M·∫≠t kh·∫©u hi·ªán t·∫°i</div>
                        <div class="inline"><input type="password" name="current_password" required></div>
                    </div>
                    <div class="row">
                        <div class="label">M·∫≠t kh·∫©u m·ªõi</div>
                        <div class="inline"><input type="password" name="password" required></div>
                    </div>
                    <div class="row">
                        <div class="label">X√°c nh·∫≠n m·∫≠t kh·∫©u</div>
                        <div class="inline"><input type="password" name="password_confirmation" required></div>
                    </div>
                    <div class="actions" style="margin-top:8px;"><button type="submit" class="btn primary">L∆∞u</button></div>
                    @if ($errors->any())
                        <div style="background:#fee2e2; color:#dc2626; padding:10px 12px; border:1px solid #fecaca; border-radius:8px; margin-top:8px;">
                            <ul style="margin:0; padding-left:16px;">
                                @foreach ($errors->all() as $error)
                                    <li>{{ $error }}</li>
                                @endforeach
                            </ul>
                        </div>
                    @endif
                </form>
            </div>
        </div>
        <div class="card">
            @if(session('success'))
                <div class="success-message">{{ session('success') }}</div>
            @endif
            @php($shop = \App\Models\Shop::find(auth()->id()))
            <form id="formShop" method="post" action="{{ route('account.shop.update') }}" enctype="multipart/form-data">
                @csrf
                <div class="row" style="justify-content:space-between; margin-bottom:16px;">
                    <h3 style="margin:0;">Th√¥ng tin shop</h3>
                    <button type="button" id="btnEditShop" class="icon-btn" title="Ch·ªânh s·ª≠a">‚úé</button>
                </div>
                <div class="row">
                    <div class="label">Logo</div>
                    <div>
                        @if($shop && $shop->logo_path)
                            <img id="logo_img" src="{{ Storage::disk('public')->url($shop->logo_path) }}" class="logo" alt="logo">
                        @else
                            <img id="logo_img" src="/Picture/logo.png" class="logo" alt="logo">
                        @endif
                        <input id="logo_input" type="file" name="logo" accept="image/*" class="edit-input" style="margin-left:12px;">
                    </div>
                </div>
                <div class="row">
                    <div class="label">T√™n shop</div>
                    <div>
                        <span class="view-text">{{ $shop->name ?? '‚Äî' }}</span>
                        <input class="edit-input" type="text" name="name" value="{{ $shop->name ?? '' }}">
                    </div>
                </div>
                <div class="row">
                    <div class="label">M√¥ t·∫£</div>
                    <div>
                        <span class="view-text">{{ $shop->description ?? '‚Äî' }}</span>
                        <textarea class="edit-input" name="description" rows="3" style="width:100%; max-width:480px;">{{ $shop->description ?? '' }}</textarea>
                    </div>
                </div>
                <div class="row">
                    <div class="label">Tr·∫°ng th√°i</div>
                    <div>
                        <span class="view-text" id="shop_status">{{ $shop->status ?? '‚Äî' }}</span>
                        <!-- Kh√¥ng cho s·ª≠a tr·∫°ng th√°i -->
                        <select class="edit-input" name="status" disabled style="display:none;">
                            <option value="active" {{ ($shop && $shop->status=='active') ? 'selected' : '' }}>Ho·∫°t ƒë·ªông</option>
                            <option value="closed" {{ ($shop && $shop->status=='closed') ? 'selected' : '' }}>ƒê√≥ng c·ª≠a</option>
                        </select>
                    </div>
                </div>

                @if ($errors->any())
                    <div style="background:#fee2e2; color:#dc2626; padding:10px 12px; border:1px solid #fecaca; border-radius:8px; margin-top:8px;">
                        <ul style="margin:0; padding-left:16px;">
                            @foreach ($errors->all() as $error)
                                <li>{{ $error }}</li>
                            @endforeach
                        </ul>
                    </div>
                @endif
                <div class="save-bar">
                    <button type="submit" class="btn primary">L∆∞u</button>
                    <button type="button" id="btnCancelShop" class="btn">H·ªßy</button>
                </div>
            </form>
        </div>
    </template>
    <template id="tpl-vouchers">
<?php
    $shop = \App\Models\Shop::where('user_id', auth()->id())->first();
    $vouchers = $shop ? \App\Models\Voucher::where('shop_id', $shop->user_id)->latest()->get() : collect();
?>
       
<div class="card">
    <div style="display:flex; justify-content:space-between; align-items:center; margin-bottom:16px;">
        <h2>üéüÔ∏è Qu·∫£n l√Ω Voucher</h2>
        <a href="#" onclick="event.preventDefault(); navigate('voucher_add')" class="btn primary">+ Th√™m Voucher</a>
    </div>
    <table style="width:100%; border-collapse:separate; border-spacing:0 8px;">
        <thead>
            <tr style="background:#f3f4f6;">
                <th style="padding:12px;">M√£</th>
                <th style="padding:12px;">Gi·∫£m gi√°</th>
                <th style="padding:12px;">H·∫øt h·∫°n</th>
                <th style="padding:12px;">Tr·∫°ng th√°i</th>
                <th style="padding:12px;">H√†nh ƒë·ªông</th>
            </tr>
        </thead>
        <tbody>
            @foreach($vouchers as $v)
            <tr data-id="{{ $v->id }}" style="background:#fff; border:1px solid #e5e7eb;">
                <td style="padding:12px;">{{ $v->code }}</td>
                <td style="padding:12px;"><input type="number" value="{{ $v->discount_amount }}" style="width:100px; text-align:center;"></td>
                <td style="padding:12px;"><input type="date" value="{{ $v->expiry_date->format('Y-m-d') }}"></td>
                <td style="padding:12px;">
                    <select>
                        <option value="active" {{ $v->status=='active'?'selected':'' }}>Ho·∫°t ƒë·ªông</option>
                        <option value="expired" {{ $v->status=='expired'?'selected':'' }}>H·∫øt h·∫°n</option>
                    </select>
                </td>
                <td style="padding:12px;">
                    <button class="btn green btn-save">L∆∞u</button>
                    <button class="btn red btn-delete">X√≥a</button>
                </td>
            </tr>
            @endforeach
        </tbody>
    </table>
</div>
</template>
<template id="tpl-voucher-add">
        @if($shop && $shop->status === 'suspended')
        <div class="suspended-alert">
            <h3 style="margin:0 0 8px 0; font-weight:600;">Shop ƒë√£ b·ªã ƒë√¨nh ch·ªâ</h3>
            <p style="margin:0; font-size:14px;">Shop c·ªßa b·∫°n ƒë√£ b·ªã ƒë√¨nh ch·ªâ ho·∫°t ƒë·ªông. Vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ ƒë·ªÉ ƒë∆∞·ª£c gi·∫£i quy·∫øt. C√°c ch·ª©c nƒÉng qu·∫£n l√Ω c√≥ th·ªÉ b·ªã h·∫°n ch·∫ø.</p>
        </div>
        @endif
<div class="card">
    <h2 style="margin-bottom:12px;">‚ûï Th√™m Voucher M·ªõi</h2>
    <form id="voucherAddForm">
        @csrf
        <div style="margin-bottom:12px;">
            <label>M√£ voucher</label>
            <input type="text" name="code" style="width:100%; padding:10px; border:1px solid #d1d5db; border-radius:8px;" required>
        </div>
        <div style="margin-bottom:12px;">
            <label>S·ªë ti·ªÅn gi·∫£m (VNƒê)</label>
            <input type="number" name="discount_amount" style="width:100%; padding:10px; border:1px solid #d1d5db; border-radius:8px;" required>
        </div>
        <div style="margin-bottom:12px;">
            <label>Ng√†y h·∫øt h·∫°n</label>
            <input type="date" name="expiry_date" style="width:100%; padding:10px; border:1px solid #d1d5db; border-radius:8px;" required>
        </div>
        <div style="display:flex; gap:8px;">
            <button type="submit" class="btn green">L∆∞u</button>
            <a href="#" onclick="event.preventDefault(); navigate('vouchers')" class="btn">Quay l·∫°i</a>
        </div>
    </form>
</div>
</template>
<template id="tpl-revenue-report">
    @if($shop && $shop->status === 'suspended')
    <div class="suspended-alert">
        <h3 style="margin:0 0 8px 0; font-weight:600;">Shop ƒë√£ b·ªã ƒë√¨nh ch·ªâ</h3>
        <p style="margin:0; font-size:14px;">Shop c·ªßa b·∫°n ƒë√£ b·ªã ƒë√¨nh ch·ªâ ho·∫°t ƒë·ªông. Vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n h·ªó tr·ª£ ƒë·ªÉ ƒë∆∞·ª£c gi·∫£i quy·∫øt. C√°c ch·ª©c nƒÉng qu·∫£n l√Ω c√≥ th·ªÉ b·ªã h·∫°n ch·∫ø.</p>
    </div>
    @endif

    <div class="card" style="margin-bottom:20px;">
        <h2 style="margin-bottom:16px;">üìä Th·ªëng k√™ doanh thu</h2>

        <!-- B·ªô l·ªçc nƒÉm -->
        <!-- B·ªô l·ªçc nƒÉm -->
<form id="yearForm" style="margin-bottom:20px; display:flex; align-items:center; gap:12px;">
    <label for="yearSelect">NƒÉm:</label>
    <select id="yearSelect" name="year"
        style="padding:8px 12px; border-radius:8px; border:1px solid #d1d5db;">
        @for($y = now()->year; $y >= now()->year - 5; $y--)
            <option value="{{ $y }}" {{ $year == $y ? 'selected' : '' }}>{{ $y }}</option>
        @endfor
    </select>
</form>



        <!-- Th·ªëng k√™ t·ªïng quan -->
        <div class="grid" style="grid-template-columns: repeat(3, 1fr); margin-bottom:24px;">
            <div class="metric">
                <h3>üßæ S·ªë ƒë∆°n ho√†n t·∫•t</h3>
                <div class="val">{{ $totalOrders ?? 0 }}</div>
            </div>
            <div class="metric">
                <h3>üì¶ S·∫£n ph·∫©m ƒë√£ b√°n</h3>
                <div class="val">{{ $soldCount ?? 0 }}</div>
            </div>
            <div class="metric">
                <h3>üí∞ T·ªïng doanh thu</h3>
                <div class="val" style="color:#16a34a;">
                    {{ number_format($totalRevenue ?? 0, 0, ',', '.') }} ‚Ç´
                </div>
            </div>
        </div>

        <!-- Bi·ªÉu ƒë·ªì doanh thu -->
        <!-- üß© Bi·ªÉu ƒë·ªì doanh thu -->
<div class="card" style="padding:16px; height:380px;">
    <canvas id="chartRevenue" style="width:100%; height:100%;"></canvas>
</div>

    </div>

    <!-- Chart.js -->
   
</template>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels@2"></script>
    <script>
const shopStatus = @json($shop ? $shop->status : 'active');
(function(){
    function show(viewId){
        var main = document.getElementById('mainContent');
        if(!main) {
            console.error('Main content element not found');
            return;
        }
        main.innerHTML = '';
        var tpl = document.getElementById(viewId);
        if (tpl) {
            main.appendChild(tpl.content.cloneNode(true));
        } else {
            console.error('Template not found:', viewId);
        }
    }
    function navigate(view){
        var map = {
            'orders_all': 'tpl-orders-all',
            'orders_bulk': 'tpl-orders-all',
            'handover': 'tpl-orders-all',
            'returns': 'tpl-orders-all',
            'shipping': 'tpl-orders-all',
            'products_all': 'tpl-products-all',
            'product_add': 'tpl-product-add',
            'account_personal': 'tpl-account-personal',
            'vouchers': 'tpl-vouchers',
            'voucher_add': 'tpl-voucher-add',
             'revenue_report': 'tpl-revenue-report',
        };
        show(map[view] || 'tpl-orders-all');


        history.pushState({}, '', `/seller/${view.replace('_', '/')}`);

        setTimeout(function(){
            if (view === 'product_add') bindCategory();
            if (view === 'products_all') bindProductsSearch();
            if (view === 'account_personal') bindAccountPersonal();
            if (view === 'account_personal') bindAccountShop();
            if (view === 'orders_all') bindOrders();
            if (view === 'vouchers') bindVouchers();
            if (view === 'voucher_add') bindVoucherAdd();
            if (view === 'revenue_report') bindRevenueChart();
        }, 0);
    }
    function getParameterByName(name) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(name);
    }
    (function init(){
    console.log('Initializing dashboard...');
    const path = window.location.pathname;
    if (path.includes('/seller/vouchers')) {
        navigate('vouchers');
    } else if (path.includes('/seller/vouchers/create')) {
        navigate('voucher_add');
    } else if (path.includes('/seller/dashboard')) {
        navigate('orders_all');
    } else {
        // M·∫∑c ƒë·ªãnh
        navigate('orders_all');
    }
})();
    document.querySelectorAll('.sidebar a[data-view]').forEach(function(a){
        a.addEventListener('click', function(e){
            e.preventDefault();
            navigate(a.getAttribute('data-view'));
        });
    });
    function bindCategory(){
        var sel = document.getElementById('category_select');
        var otherWrap = document.getElementById('category_other_wrap');
        var other = document.getElementById('category_other');
        var hidden = document.getElementById('category_value');
        if(!sel || !hidden) {
            console.error('Category select or hidden input not found');
            return;
        }
        function sync(){
            if (sel.value === '__other__') {
                otherWrap.style.display = 'block';
                hidden.value = (other && other.value.trim()) ? other.value.trim() : '';
            } else {
                otherWrap.style.display = 'none';
                hidden.value = sel.value;
            }
        }
        sel.addEventListener('change', sync);
        if (other) other.addEventListener('input', sync);
        sync();
        // Bind submit for add product
        const addForm = document.querySelector('.product-form[action*="products/store"]');
        if (addForm) {
            addForm.addEventListener('submit', function(e) {
                if (shopStatus === 'suspended') {
                    e.preventDefault();
                    alert('Shop ƒë√£ b·ªã ƒë√¨nh ch·ªâ. Kh√¥ng th·ªÉ th√™m s·∫£n ph·∫©m m·ªõi.');
                    return false;
                }
            });
        }
    }
    function bindProductsSearch() {
    const input = document.getElementById('productsSearch');
    const grid = document.getElementById('productsGrid');
    const statusFilter = document.getElementById('statusFilter');
    if (!grid) return;

    // üîç L·ªçc theo t√™n s·∫£n ph·∫©m
    if (input) {
        input.addEventListener('input', function () {
            const q = input.value.trim().toLowerCase();
            grid.querySelectorAll('.card.product-card').forEach(card => {
                const name = (card.querySelector('h3 span.view-text')?.textContent || '').toLowerCase();
                card.style.display = (!q || name.includes(q)) ? '' : 'none';
            });
        });
    }

    // üè∑Ô∏è L·ªçc theo tr·∫°ng th√°i
    if (statusFilter) {
        statusFilter.addEventListener('change', function () {
            const selected = statusFilter.value.trim().toLowerCase();
            grid.querySelectorAll('.card.product-card').forEach(card => {
                const status = (card.dataset.status || '').toLowerCase();
                card.style.display = (!selected || status === selected) ? '' : 'none';
            });
        });
    }
} // <-- B·ªî SUNG D·∫§U ƒê√ìNG

    function bindAccountPersonal(){
        var tabs = document.querySelectorAll('.tab');
        tabs.forEach(function(btn){
            btn.addEventListener('click', function(){
                tabs.forEach(function(b){ b.classList.remove('active'); });
                btn.classList.add('active');
                var tab = btn.getAttribute('data-tab');
                document.getElementById('tab-info').style.display = (tab==='info')?'block':'none';
                document.getElementById('tab-password').style.display = (tab==='password')?'block':'none';
            });
        });
        var form = document.getElementById('formInfo');
        if(form){
            var btnEdit = document.getElementById('btnEdit');
            var btnCancel = document.getElementById('btnCancel');
            if (btnEdit) {
    btnEdit.addEventListener('click', function (e) {
        if (shopStatus === 'suspended') {
            e.preventDefault();
            alert('üö´ Shop ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ ch·ªânh s·ª≠a th√¥ng tin c√° nh√¢n.');
            return;
        }
        form.classList.add('editing');
    });
}

            if(btnCancel) btnCancel.addEventListener('click', function(){ form.classList.remove('editing'); });
            var avatarInput = document.getElementById('avatar_input');
            var avatarImg = document.getElementById('avatar_img');
            if(avatarInput && avatarImg){
                avatarInput.addEventListener('change', function(){
                    if(this.files && this.files[0]){
                        var reader = new FileReader();
                        reader.onload = function(e){ avatarImg.src = e.target.result; }
                        reader.readAsDataURL(this.files[0]);
                    }
                });
            }
            form.addEventListener('submit', function(e){
                e.preventDefault();
                var formData = new FormData(form);
                fetch(form.getAttribute('action'), {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('input[name="_token"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if(data.success){
                        form.classList.remove('editing');
                        var successDiv = document.createElement('div');
                        successDiv.className = 'success-message';
                        successDiv.textContent = data.message;
                        form.parentElement.insertBefore(successDiv, form);
                        if(data.name) document.getElementById('name_text').textContent = data.name;
                        if(data.avatar) document.getElementById('avatar_img').src = data.avatar;
                        window.location.href = window.location.pathname + '?redirect=account_personal';
                    } else {
                        alert('C√≥ l·ªói x·∫£y ra: ' + (data.errors ? Object.values(data.errors).join(', ') : ''));
                    }
                })
                .catch(error => {
                    console.error('Form submission error:', error);
                    alert('C√≥ l·ªói x·∫£y ra khi g·ª≠i y√™u c·∫ßu.');
                });
            });
        }
        var formPassword = document.getElementById('formPassword');
        if (formPassword) {
            formPassword.addEventListener('submit', function(e){
                e.preventDefault();
                var formData = new FormData(formPassword);
                fetch(formPassword.getAttribute('action'), {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('input[name="_token"]').value
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if(data.success){
                        var successDiv = document.createElement('div');
                        successDiv.className = 'success-message';
                        successDiv.textContent = data.message;
                        formPassword.parentElement.insertBefore(successDiv, formPassword);
                        window.location.href = window.location.pathname + '?redirect=account_personal';
                    } else {
                        alert('C√≥ l·ªói x·∫£y ra: ' + (data.errors ? Object.values(data.errors).join(', ') : ''));
                    }
                })
                .catch(error => {
                    console.error('Password form submission error:', error);
                    alert('C√≥ l·ªói x·∫£y ra khi g·ª≠i y√™u c·∫ßu.');
                });
            });
        }
    }
    function bindAccountShop(){
        var form = document.getElementById('formShop');
        if(!form) {
            console.error('Shop form not found');
            return;
        }
        var btnEdit = document.getElementById('btnEditShop');
        var btnCancel = document.getElementById('btnCancelShop');
      if (btnEdit) {
    btnEdit.addEventListener('click', function (e) {
        if (shopStatus === 'suspended') {
            e.preventDefault();
            alert('üö´ Shop c·ªßa b·∫°n ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ ch·ªânh s·ª≠a th√¥ng tin.');
            return;
        }
        form.classList.add('editing');
    });
}
        if(btnCancel) btnCancel.addEventListener('click', function(){ form.classList.remove('editing'); });
        var logoInput = document.getElementById('logo_input');
        var logoImg = document.getElementById('logo_img');
        if(logoInput && logoImg){
            logoInput.addEventListener('change', function(){
                if(this.files && this.files[0]){
                    var reader = new FileReader();
                    reader.onload = function(e){ logoImg.src = e.target.result; }
                    reader.readAsDataURL(this.files[0]);
                }
            });
        }
        form.addEventListener('submit', function(e){
            e.preventDefault();
            var formData = new FormData(form);
            fetch(form.getAttribute('action'), {
                method: 'POST',
                body: formData,
                headers: {
                    'X-CSRF-TOKEN': document.querySelector('input[name="_token"]').value
                }
            })
            .then(response => response.json())
            .then(data => {
                if(data.success){
                    form.classList.remove('editing');
                    var successDiv = document.createElement('div');
                    successDiv.className = 'success-message';
                    successDiv.textContent = data.message;
                    form.parentElement.insertBefore(successDiv, form);
                    if(data.name) form.querySelector('.view-text').textContent = data.name;
                    if(data.logo) document.getElementById('logo_img').src = data.logo;
                    window.location.href = window.location.pathname + '?redirect=account_personal';
                } else {
                    alert('C√≥ l·ªói x·∫£y ra: ' + (data.errors ? Object.values(data.errors).join(', ') : ''));
                }
            })
            .catch(error => {
                console.error('Shop form submission error:', error);
                alert('C√≥ l·ªói x·∫£y ra khi g·ª≠i y√™u c·∫ßu.');
            });
        });
    }
    function renderOrders(status, fromDate = null, toDate = null) {
        console.log('Rendering orders for status:', status, 'from:', fromDate, 'to:', toDate);
        const list = document.getElementById('ordersList');
        if (!list) {
            console.error('Orders list element not found');
            alert('L·ªói: Kh√¥ng t√¨m th·∫•y danh s√°ch ƒë∆°n h√†ng.');
            return;
        }
        list.innerHTML = '';
        console.log('Available orders:', allOrders); // Debug
        let startDate = fromDate ? new Date(fromDate) : null;
        let endDate = toDate ? new Date(toDate) : null;
        if (startDate) startDate.setHours(0, 0, 0, 0);
        if (endDate) endDate.setHours(23, 59, 59, 999);
        const filteredOrders = allOrders.filter(order => {
            if (!order) {
                console.warn('Invalid order:', order);
                return false;
            }
            if (status && order.status !== status) return false;
            const orderDate = new Date(order.created_at);
            if (startDate && orderDate < startDate) return false;
            if (endDate && orderDate > endDate) return false;
            return true;
        });
        console.log('Filtered orders:', filteredOrders); // Debug
        if (filteredOrders.length === 0) {
            list.innerHTML = '<p style="color:#6b7280; margin:0;">Ch∆∞a c√≥ ƒë∆°n h√†ng ph√π h·ª£p.</p>';
            return;
        }
        const table = document.createElement('table');
        table.style.width = '100%';
        table.style.borderCollapse = 'separate';
        table.style.borderSpacing = '0 8px';
        const thead = document.createElement('thead');
        thead.innerHTML = `
            <tr style="background:#f3f4f6; text-align:left;">
                <th style="padding:12px;">M√£ ƒë∆°n</th>
                <th style="padding:12px;">Kh√°ch h√†ng</th>
                <th style="padding:12px;">T·ªïng gi√°</th>
                <th style="padding:12px;">S·∫£n ph·∫©m</th>
                <th style="padding:12px;">Tr·∫°ng th√°i</th>
                <th style="padding:12px;">Ng√†y t·∫°o</th>
                <th style="padding:12px;">H√†nh ƒë·ªông</th>
            </tr>
        `;
        table.appendChild(thead);
        const tbody = document.createElement('tbody');
        filteredOrders.forEach(order => {
            if (!order.id) {
                console.error('Invalid order data:', order);
                return;
            }
            const row = document.createElement('tr');
            row.style.background = '#fff';
            row.style.border = '1px solid #e5e7eb';
            row.style.borderRadius = '8px';
            let itemsHtml = '';
            if (order.items && Array.isArray(order.items)) {
                order.items.forEach(item => {
                    itemsHtml += `<div>${item.product_name || '‚Äî'} x ${item.quantity || 0} (${numberFormat(item.price || 0)} VND)</div>`;
                });
            } else {
                console.warn('No items for order:', order.id);
                itemsHtml = '<div>‚Äî</div>';
            }
            let actionHtml = '';
            let statusText = '';
            let statusColor = '#e5e7eb';
            switch (order.status) {
                case 'pending':
                    actionHtml = `
                        <button onclick="updateOrderStatus(${order.id}, this)" class="btn green" style="padding:6px 12px; border-radius:4px;" data-order-id="${order.id}" data-original-text="X·ª≠ l√Ω ƒë∆°n h√†ng">X·ª≠ l√Ω ƒë∆°n h√†ng</button>
                    `;
                    statusText = 'Ch·ªù x·ª≠ l√Ω';
                    statusColor = '#f59e0b';
                    break;
                case 'shipped':
                    actionHtml = `
                        <button onclick="markDelivered(${order.id}, this)" class="btn orange" style="padding:6px 12px; border-radius:4px;" data-order-id="${order.id}" data-original-text="Giao h√†ng th√†nh c√¥ng">Giao h√†ng th√†nh c√¥ng</button>
                    `;
                    statusText = 'ƒêang giao';
                    statusColor = '#92400e';
                    break;
                case 'completed':
                    actionHtml = `
                        <span style="padding:4px 8px; border-radius:4px; background:#d1d5db; color:#6b7280; font-size:12px;">Ho√†n th√†nh</span>
                    `;
                    statusText = 'Ho√†n th√†nh';
                    statusColor = '#6b7280';
                    break;
                case 'cancelled':
                    actionHtml = `
                        <span style="padding:4px 8px; border-radius:4px; background:#fecaca; color:#dc2626; font-size:12px;">ƒê√£ h·ªßy</span>
                    `;
                    statusText = 'ƒê√£ h·ªßy';
                    statusColor = '#dc2626';
                    break;
                default:
                    console.warn('Unknown order status:', order.status);
                    statusText = 'Kh√¥ng x√°c ƒë·ªãnh';
            }
            row.innerHTML = `
                <td style="padding:12px;">#${order.id}</td>
                <td style="padding:12px;">${order.user?.name || '‚Äî'}</td>
                <td style="padding:12px;">${numberFormat(order.total_price || 0)} VND</td>
                <td style="padding:12px;">${itemsHtml}</td>
                <td style="padding:12px;"><span style="padding:4px 8px; border-radius:4px; background:${statusColor}20; color:${statusColor};">${statusText}</span></td>
                <td style="padding:12px;">${new Date(order.created_at).toLocaleDateString('vi-VN')}</td>
                <td style="padding:12px;">${actionHtml}</td>
            `;
            tbody.appendChild(row);
        });
        table.appendChild(tbody);
        list.appendChild(table);
    }
    function numberFormat(num) {
        return num.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.');
    }
    function updateOrderStatus(orderId, button) {
        console.log('Clicked X·ª≠ l√Ω ƒë∆°n h√†ng for order:', orderId);
        if (!button) {
            console.error('Button element missing for order:', orderId);
            alert('L·ªói: Kh√¥ng t√¨m th·∫•y n√∫t x·ª≠ l√Ω.');
            return;
        }
        const csrfToken = document.querySelector('meta[name="csrf-token"]')?.content;
        if (!csrfToken) {
            console.error('CSRF token not found');
            alert('L·ªói: Kh√¥ng t√¨m th·∫•y CSRF token.');
            return;
        }
        button.disabled = true;
        button.textContent = 'ƒêang x·ª≠ l√Ω...';
        console.log('Sending AJAX to update order:', orderId, 'to status: shipped');
        fetch(`/orders/${orderId}/update-status`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': csrfToken
            },
            body: JSON.stringify({ status: 'shipped' })
        })
        .then(response => {
            console.log('Server response status:', response.status);
            if (!response.ok) {
                return response.json().then(err => {
                    throw new Error(err.message || `HTTP error! Status: ${response.status}`);
                });
            }
            return response.json();
        })
        .then(data => {
            console.log('Server response data:', data);
            if (data.success) {
                const successDiv = document.createElement('div');
                successDiv.className = 'success-message';
                successDiv.textContent = 'ƒê√£ chuy·ªÉn tr·∫°ng th√°i sang ƒêang giao!';
                successDiv.style.marginBottom = '12px';
                const list = document.getElementById('ordersList');
                if (list) {
                    list.parentElement.insertBefore(successDiv, list);
                }
                // C·∫≠p nh·∫≠t tr·∫°ng th√°i trong allOrders
                const order = allOrders.find(o => o.id === orderId);
                if (order) {
                    order.status = 'shipped';
                }
                // T·ª± ƒë·ªông chuy·ªÉn sang tab "ƒêang giao" v√† l√†m m·ªõi danh s√°ch
                const shippedTab = document.querySelector('.tab[data-tab="shipped"]');
                const tabs = document.querySelectorAll('.tab[data-tab]');
                tabs.forEach(t => t.classList.remove('active'));
                if (shippedTab) shippedTab.classList.add('active');
                const from = document.getElementById('filterFrom').value;
                const to = document.getElementById('filterTo').value;
                renderOrders('shipped', from, to);
            } else {
                alert('L·ªói: ' + (data.message || 'Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t tr·∫°ng th√°i.'));
            }
        })
        .catch(error => {
            console.error('AJAX error:', error);
            alert('L·ªói khi g·ª≠i y√™u c·∫ßu: ' + error.message);
        })
        .finally(() => {
            button.disabled = false;
            button.textContent = 'X·ª≠ l√Ω ƒë∆°n h√†ng';
        });
    }
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('btn-edit')) {
            const card = e.target.closest('.product-card');
            card.classList.add('editing');
        }
        if (e.target.classList.contains('btn-cancel')) {
            const card = e.target.closest('.product-card');
            card.classList.remove('editing');
        }
    });
    // Expose to global so inline onclick can access
    window.updateOrderStatus = updateOrderStatus;
    function markDelivered(orderId, button) {
        console.log('Clicked Giao h√†ng th√†nh c√¥ng for order:', orderId);
        if (!button) {
            alert('L·ªói: Kh√¥ng t√¨m th·∫•y n√∫t.');
            return;
        }
        const csrfToken = document.querySelector('meta[name="csrf-token"]')?.content;
        if (!csrfToken) {
            alert('L·ªói: Thi·∫øu CSRF token');
            return;
        }
        button.disabled = true;
        const original = button.textContent;
        button.textContent = 'ƒêang c·∫≠p nh·∫≠t...';
        fetch(`/orders/${orderId}/update-status`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': csrfToken
            },
            body: JSON.stringify({ status: 'completed' })
        })
        .then(r => {
            if (!r.ok) return r.json().then(e => { throw new Error(e.message || 'C·∫≠p nh·∫≠t th·∫•t b·∫°i'); });
            return r.json();
        })
        .then(data => {
            if (data.success) {
                const order = allOrders.find(o => o.id === orderId);
                if (order) order.status = 'completed';
                const completedTab = document.querySelector('.tab[data-tab="completed"]');
                const tabs = document.querySelectorAll('.tab[data-tab]');
                tabs.forEach(t => t.classList.remove('active'));
                if (completedTab) completedTab.classList.add('active');
                const from = document.getElementById('filterFrom').value;
                const to = document.getElementById('filterTo').value;
                renderOrders('completed', from, to);
            } else {
                alert(data.message || 'Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t.');
            }
        })
        .catch(err => {
            console.error(err);
            alert(err.message);
        })
        .finally(() => {
            button.disabled = false;
            button.textContent = original;
        });
    }
    window.markDelivered = markDelivered;
    function bindOrders() {
        console.log('Binding orders tab...');
        const tabs = document.querySelectorAll('.tab[data-tab]');
        let currentStatus = 'pending';
        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                console.log('Tab clicked:', tab.getAttribute('data-tab'));
                tabs.forEach(t => t.classList.remove('active'));
                tab.classList.add('active');
                currentStatus = tab.getAttribute('data-tab');
                const from = document.getElementById('filterFrom').value;
                const to = document.getElementById('filterTo').value;
                renderOrders(currentStatus, from, to);
            });
        });
        const btnFilter = document.getElementById('btnFilter');
        if (btnFilter) {
            btnFilter.addEventListener('click', () => {
                console.log('Filter button clicked');
                const from = document.getElementById('filterFrom').value;
                const to = document.getElementById('filterTo').value;
                renderOrders(currentStatus, from, to);
            });
        }
        renderOrders('pending');
    }
    window.navigate = navigate;
    function bindVouchers() {
    // ‚úÖ L·∫•y tbody th·ª±c trong DOM
    const tbody = document.querySelector('#mainContent tbody');
    if (!tbody) {
        console.warn('Kh√¥ng t√¨m th·∫•y tbody trong giao di·ªán voucher');
        return;
    }
    fetch('/seller/vouchers/json')
        .then(res => {
            if (!res.ok) throw new Error('Server tr·∫£ l·ªói ' + res.status);
            return res.json();
        })
        .then(vouchers => {
            tbody.innerHTML = '';
            if (!vouchers.length) {
                tbody.innerHTML = `
                    <tr><td colspan="5" style="text-align:center;padding:20px;color:#888;">
                        ‚ö†Ô∏è Ch∆∞a c√≥ voucher n√†o.
                    </td></tr>`;
                return;
            }
            vouchers.forEach(v => {
                const row = document.createElement('tr');
                row.dataset.id = v.id;
                // Chu·∫©n ho√° ng√†y t·ª´ "2025-11-15T00:00:00Z" -> "2025-11-15"
                const expiry = (v.expiry_date || '').toString().split('T')[0] || '';
                row.innerHTML = `
                    <td style="padding:12px;">${v.code}</td>
                    <td style="padding:12px;">
                        <input type="number" value="${v.discount_amount}" style="width:100px;text-align:center;" disabled>
                    </td>
                    <td style="padding:12px;">
                        <input type="date" value="${expiry}" disabled>
                    </td>
                    <td style="padding:12px;">
                        <select disabled>
                            <option value="active" ${v.status === 'active' ? 'selected' : ''}>Ho·∫°t ƒë·ªông</option>
                            <option value="expired" ${v.status === 'expired' ? 'selected' : ''}>H·∫øt h·∫°n</option>
                        </select>
                    </td>
                    <td style="padding:12px;">
                        <button class="btn orange btn-edit-voucher">S·ª≠a</button>
                        <button class="btn red btn-delete">X√≥a</button>
                    </td>`;
                tbody.appendChild(row);
            });
            // üî¥ X√ìA
            // üî¥ X√ìA
tbody.querySelectorAll('.btn-delete').forEach(btn => {
    btn.addEventListener('click', async (e) => {
        if (shopStatus === 'suspended') {
            e.preventDefault();
            alert('üö´ Shop c·ªßa b·∫°n ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ x√≥a voucher.');
            return;
        }

        const row = btn.closest('tr');
        const id = row.dataset.id;
        if (!confirm('‚ö†Ô∏è B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a voucher n√†y kh√¥ng?')) return;

        try {
            const res = await fetch(`/seller/vouchers/${id}`, {
                method: 'DELETE',
                headers: {
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                }
            });
            const data = await res.json();
            if (data.success) {
                alert('üóëÔ∏è ƒê√£ x√≥a voucher th√†nh c√¥ng!');
                bindVouchers(); // reload
            } else {
                alert('‚ùå ' + (data.message || 'Kh√¥ng th·ªÉ x√≥a voucher!'));
            }
        } catch (err) {
            console.error('L·ªói khi x√≥a voucher:', err);
            alert('‚ö†Ô∏è L·ªói k·∫øt n·ªëi server!');
        }
    });
});

// üü† S·ª¨A / üíæ L∆ØU
tbody.querySelectorAll('.btn-edit-voucher').forEach(btn => {
    btn.addEventListener('click', async (e) => {
        if (shopStatus === 'suspended') {
            e.preventDefault();
            alert('üö´ Shop c·ªßa b·∫°n ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ ch·ªânh s·ª≠a voucher.');
            return;
        }

        const row = btn.closest('tr');
        const inputs = row.querySelectorAll('input, select');
        const id = row.dataset.id;

        if (btn.textContent === 'S·ª≠a') {
            // üîì Cho ph√©p ch·ªânh s·ª≠a
            inputs.forEach(i => i.disabled = false);
            btn.textContent = 'L∆∞u';
            btn.classList.remove('orange');
            btn.classList.add('green');
            return;
        }

        // üíæ L∆∞u thay ƒë·ªïi
        const discount = row.querySelector('input[type="number"]').value.trim();
        const expiry = row.querySelector('input[type="date"]').value;
        const status = row.querySelector('select').value;
        try {
            const res = await fetch(`/seller/vouchers/${id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json',
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                },
                body: JSON.stringify({
                    discount_amount: discount,
                    expiry_date: expiry,
                    status: status
                })
            });
            const data = await res.json();
            if (data.success) {
                alert('‚úÖ C·∫≠p nh·∫≠t voucher th√†nh c√¥ng!');
                inputs.forEach(i => i.disabled = true);
                btn.textContent = 'S·ª≠a';
                btn.classList.remove('green');
                btn.classList.add('orange');
            } else {
                alert('‚ùå ' + (data.message || 'Kh√¥ng th·ªÉ c·∫≠p nh·∫≠t voucher!'));
            }
        } catch (err) {
            console.error('L·ªói khi c·∫≠p nh·∫≠t voucher:', err);
            alert('‚ö†Ô∏è L·ªói k·∫øt n·ªëi server!');
        }
    });
});

        })
        .catch(err => {
            console.error('L·ªói khi t·∫£i voucher:', err);
            alert('‚ö†Ô∏è Kh√¥ng th·ªÉ t·∫£i danh s√°ch voucher.');
        });
}
function bindVoucherAdd() {
    const form = document.getElementById('voucherAddForm');
    if (!form) return;
    form.onsubmit = async e => {
        e.preventDefault();
        const data = new FormData(form);
        try {
            const res = await fetch('/seller/vouchers', {
                method: 'POST',
                headers: {
                    'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                },
                body: data
            });
            if (!res.ok) throw new Error(`Server tr·∫£ l·ªói ${res.status}`);
            const d = await res.json();
            if (d.success) {
                alert('‚úÖ Th√™m voucher th√†nh c√¥ng!');
                window.location.href = '/seller/vouchers';
            } else {
                alert('‚ùå C√≥ l·ªói x·∫£y ra khi th√™m voucher!');
            }
        } catch (err) {
            console.error('‚ùå L·ªói khi th√™m voucher:', err);
            alert('‚ö†Ô∏è L·ªói k·∫øt n·ªëi ƒë·∫øn server ho·∫∑c ph·∫£n h·ªìi kh√¥ng h·ª£p l·ªá!');
        }
    };
}
function bindRevenueChart() {
    const ctx = document.getElementById('chartRevenue');
    if (!ctx) return;

    const yearSelect = document.getElementById('yearSelect');
    let chartInstance = null;

    // ‚úÖ H√†m v·∫Ω l·∫°i bi·ªÉu ƒë·ªì
    const renderChart = (revenues, year) => {
        if (chartInstance) chartInstance.destroy();

        const months = Array.from({length: revenues.length}, (_, i) => 'T' + (i + 1));

        chartInstance = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: months,
                datasets: [{
                    label: `Doanh thu ${year}`,
                    data: revenues,
                    backgroundColor: '#2563eb',
                    borderRadius: 6,
                    barThickness: 'flex'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                layout: { padding: 10 },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: v => new Intl.NumberFormat('vi-VN').format(v) + ' ‚Ç´'
                        }
                    },
                    x: { grid: { display: false } }
                },
                plugins: {
    datalabels: {
        anchor: 'end',          // ƒëi·ªÉm neo ·ªü ƒë·ªânh c·ªôt
        align: 'end',           // cƒÉn ph√≠a tr√™n ƒë·ªânh
        offset: -6,             // ƒë·∫©y l√™n cao 6px ƒë·ªÉ t√°ch kh·ªèi c·ªôt
        color: '#111',
        font: { weight: '600', size: 13 },
        formatter: v => v > 0 ? new Intl.NumberFormat('vi-VN').format(v) + ' ‚Ç´' : ''
    }
}

            },
            plugins: [ChartDataLabels]
        });
    };

    // ‚úÖ L·∫ßn ƒë·∫ßu v·∫Ω theo d·ªØ li·ªáu Blade render s·∫µn
    const revenuesBlade = {!! json_encode($revenuesChart ?? []) !!};
    renderChart(revenuesBlade, {{ $year }});

    // ‚úÖ Khi ch·ªçn nƒÉm kh√°c ‚Üí ch·ªâ g·ªçi API JSON ‚Üí update chart
    if (yearSelect && !yearSelect.dataset.bound) {
        yearSelect.dataset.bound = 'true';
        yearSelect.addEventListener('change', e => {
            const year = e.target.value;
            fetch(`/seller/revenue/json?year=${year}`)
                .then(res => res.json())
                .then(data => {
                    renderChart(data.revenues, data.year);
                });
        });
    }
}

})();
// üîí KH√ìA CH·ª®C NƒÇNG KHI SHOP ƒêANG B·ªä ƒê√åNH CH·ªà
// üîí KH√ìA CH·ª®C NƒÇNG KHI SHOP ƒêANG B·ªä ƒê√åNH CH·ªà
if (shopStatus === 'suspended') {
    alert('‚ö†Ô∏è Shop c·ªßa b·∫°n hi·ªán ƒëang b·ªã ƒë√¨nh ch·ªâ. M·ªôt s·ªë ch·ª©c nƒÉng nh∆∞ th√™m, s·ª≠a, x√≥a s·∫£n ph·∫©m ho·∫∑c voucher ƒë√£ b·ªã gi·ªõi h·∫°n.');

    // üß© H√†m ti·ªán √≠ch chung
    const blockClick = (selector, message) => {
        document.querySelectorAll(selector).forEach(btn => {
            btn.addEventListener('click', e => {
                e.preventDefault();
                e.stopImmediatePropagation();
                alert(message);
            }, { capture: true });
        });
    };
    const blockSubmit = (selector, message) => {
        const form = document.querySelector(selector);
        if (form) {
            form.addEventListener('submit', e => {
                e.preventDefault();
                e.stopImmediatePropagation();
                alert(message);
            }, { capture: true });
        }
    };

    // üõçÔ∏è 1Ô∏è‚É£ Kh√≥a s·∫£n ph·∫©m (th√™m, s·ª≠a, x√≥a)
    const disableProducts = () => {
        blockClick('.btn-edit', 'üö´ Shop ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ ch·ªânh s·ª≠a s·∫£n ph·∫©m.');
        blockClick('.btn-delete-product', 'üö´ Shop ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ x√≥a s·∫£n ph·∫©m.');
        blockSubmit('.product-form[action*="products/store"]', 'üö´ Shop ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ th√™m s·∫£n ph·∫©m m·ªõi.');
    };

    // üé´ 2Ô∏è‚É£ Kh√≥a voucher (th√™m, s·ª≠a, x√≥a)
    const disableVouchers = () => {
        blockClick('.btn-edit-voucher', 'üö´ Shop ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ ch·ªânh s·ª≠a voucher.');
        blockClick('.btn-delete', 'üö´ Shop ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ x√≥a voucher.');
        blockSubmit('#voucherAddForm', 'üö´ Shop ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ th√™m voucher m·ªõi.');
    };

    // üë§ 3Ô∏è‚É£ Kh√≥a t√†i kho·∫£n c√° nh√¢n
    const disableAccount = () => {
        blockSubmit('#formInfo', 'üö´ Shop ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ thay ƒë·ªïi th√¥ng tin c√° nh√¢n.');
        blockSubmit('#formPassword', 'üö´ Shop ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ ƒë·ªïi m·∫≠t kh·∫©u.');
    };

    // üè™ 4Ô∏è‚É£ Kh√≥a form shop
    const disableShopForm = () => {
        blockSubmit('#formShop', 'üö´ Shop ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ c·∫≠p nh·∫≠t th√¥ng tin shop.');
    };

    // üîÅ 5Ô∏è‚É£ G·ªçi l·∫°i m·ªói khi chuy·ªÉn tab (v√¨ n·ªôi dung render ƒë·ªông)
    const origNavigate = window.navigate;
    window.navigate = function(view) {
        origNavigate(view);
        setTimeout(() => {
            disableProducts();
            disableVouchers();
            disableAccount();
            disableShopForm();
        }, 800);
    };

    // üöÄ 6Ô∏è‚É£ G·ªçi khi m·ªõi v√†o dashboard
    disableProducts();
    disableVouchers();
    disableAccount();
    disableShopForm();
}

// üö´ Ch·∫∑n ri√™ng n√∫t "Th√™m s·∫£n ph·∫©m" v√† "Th√™m voucher" khi shop b·ªã ƒë√¨nh ch·ªâ
document.addEventListener('click', function(e) {
    if (shopStatus === 'suspended') {
        if (e.target.closest('a[href*="/seller/products/create"]') || e.target.closest('button.add-product-btn')) {
            e.preventDefault();
            alert('üö´ Shop c·ªßa b·∫°n ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ th√™m s·∫£n ph·∫©m m·ªõi.');
            return;
        }

        if (e.target.closest('a[href*="/seller/vouchers/create"]') || e.target.closest('button.add-voucher-btn')) {
            e.preventDefault();
            alert('üö´ Shop c·ªßa b·∫°n ƒëang b·ªã ƒë√¨nh ch·ªâ ‚Äî kh√¥ng th·ªÉ th√™m voucher m·ªõi.');
            return;
        }
    }
});

// üü¶ L·ªçc theo tr·∫°ng th√°i (ƒë·∫∑t trong ph·∫°m vi global, kh√¥ng l·ªói bi·∫øn)
// üü¶ L·ªçc theo tr·∫°ng th√°i (ch√≠nh x√°c theo data-status)
document.addEventListener('DOMContentLoaded', function() {
    const statusFilter = document.getElementById('statusFilter');
    const grid = document.getElementById('productsGrid');

    if (statusFilter && grid) {
        statusFilter.addEventListener('change', function() {
            const selected = statusFilter.value.trim().toLowerCase();

            grid.querySelectorAll('.card.product-card').forEach(function(card) {
                const status = (card.dataset.status || '').toLowerCase();

                if (!selected || status === selected) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        });
    }
});


</script>

</body>
</html>